{% extends "forms/field.html.twig" %}
{% set toastui_id = unique_id(6, {'prefix': 'tui_'}) %}
{% set configs = config.plugins['admin-addon-toast-ui-editor'] %}
{% set form_template = include('partials/custom/toastui.custom.add-image.form.html.twig')|raw %}

{% block label %}
    {% if field.label %}
        {% set hint = field.help ? 'data-hint="' ~ field.help|tu|raw ~ '"': '' %}
        <div class="form-label form-field hint--bottom" {{ hint }}>{{ field.label|tu|raw }}</div>
    {% endif %}
{% endblock %}
{% block field %}
    <div class="form-field {{ field.classes|default('') }}">
        <div class="form-data">
            <textarea
                class="toastui-shadow"
                data-bound="{{ toastui_id }}"
                name="{{ (scope ~ field.name)|fieldName }}"
                {% if field.disabled or isDisabledToggleable %}disabled="disabled"{% endif %}
                {% if field.placeholder %}placeholder="{{ field.placeholder|tu }}"{% endif %} {# this probably has no effect and may not have an equivalent in Toast UI?? #}
                {# ignoring field.autofocus #}
                {% if field.novalidate in ['on', 'true', 1] %}novalidate="novalidate"{% endif %}
                {% if field.readonly in ['on', 'true', 1] %}readonly="readonly"{% endif %} {# see also JS setting this attribute below #}
            >{{ value }}</textarea>
        </div>
        <div id="{{ toastui_id }}"></div>
        {% script 'plugins://admin-addon-toast-ui-editor/admin/themes/grav/assets/js/add-image.js' %}
        {% script %}
            var GravPlugin = GravPlugin || {};
            GravPlugin['adminAddonToastUiEditor'] = GravPlugin.adminAddonToastUiEditor || {};
            GravPlugin.adminAddonToastUiEditor['configs'] = GravPlugin.adminAddonToastUiEditor.configs || {{ configs|json_encode|raw }};

            addEventListener('load', () => {
                const editor = GravPlugin.adminAddonToastUiEditor.newEditor('{{ toastui_id }}', '{{ value|e('js') }}', {{ field.attributes.toastui|default({})|json_encode(constant('JSON_FORCE_OBJECT'))|raw }});
                editor.addButton('{{ form_template|e('js') }}', editor); {# passing 'this' context in here to work around a shortcoming in my ability to find 'this' #}
                });
        {% endscript %}
    </div>

{% endblock %}
